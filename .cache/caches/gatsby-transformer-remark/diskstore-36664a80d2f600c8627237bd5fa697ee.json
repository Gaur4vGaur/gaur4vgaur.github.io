{"expireTime":9007200872113773000,"key":"transformer-remark-markdown-ast-256ddb5888af5b4a6e27aea83adb2f30-gatsby-remark-imagesgatsby-remark-vscodegatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-smartypantsgatsby-remark-copy-linked-filesgatsby-remark-reading-timegatsby-remark-social-cards-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"As the name suggests, partial functions are only partial implementations. They do not cover every possible scenario of incoming parameters. A partial function caters to only a subset of possible data for which it has been defined. In order to assist developers, if the partial function is defined for a given input, Scala’s ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":325,"offset":325},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">PartialFunction</code>","position":{"start":{"line":2,"column":325,"offset":325},"end":{"line":2,"column":342,"offset":342},"indent":[]}},{"type":"text","value":" trait provides the ","position":{"start":{"line":2,"column":342,"offset":342},"end":{"line":2,"column":362,"offset":362},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isDefinedAt</code>","position":{"start":{"line":2,"column":362,"offset":362},"end":{"line":2,"column":375,"offset":375},"indent":[]}},{"type":"text","value":" method. The ","position":{"start":{"line":2,"column":375,"offset":375},"end":{"line":2,"column":388,"offset":388},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isDefinedAt</code>","position":{"start":{"line":2,"column":388,"offset":388},"end":{"line":2,"column":401,"offset":401},"indent":[]}},{"type":"text","value":" method can be queried if it can handle a given value.","position":{"start":{"line":2,"column":401,"offset":401},"end":{"line":2,"column":455,"offset":455},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":455,"offset":455},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Partial functions in Scala can be defined by using the ","position":{"start":{"line":4,"column":1,"offset":457},"end":{"line":4,"column":56,"offset":512},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">case</code>","position":{"start":{"line":4,"column":56,"offset":512},"end":{"line":4,"column":62,"offset":518},"indent":[]}},{"type":"text","value":" statement. Let us define a simple partial function, ","position":{"start":{"line":4,"column":62,"offset":518},"end":{"line":4,"column":115,"offset":571},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">squareRoot</code>","position":{"start":{"line":4,"column":115,"offset":571},"end":{"line":4,"column":127,"offset":583},"indent":[]}},{"type":"text","value":". The function would take in a ","position":{"start":{"line":4,"column":127,"offset":583},"end":{"line":4,"column":158,"offset":614},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">double</code>","position":{"start":{"line":4,"column":158,"offset":614},"end":{"line":4,"column":166,"offset":622},"indent":[]}},{"type":"text","value":" input parameter and would ","position":{"start":{"line":4,"column":166,"offset":622},"end":{"line":4,"column":193,"offset":649},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">return</code>","position":{"start":{"line":4,"column":193,"offset":649},"end":{"line":4,"column":201,"offset":657},"indent":[]}},{"type":"text","value":" the square root.","position":{"start":{"line":4,"column":201,"offset":657},"end":{"line":4,"column":218,"offset":674},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":457},"end":{"line":4,"column":218,"offset":674},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val squareRoot</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">PartialFunction</span><span class=\"mtk1\">[Double, Double] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> { </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">case</span><span class=\"mtk1\"> d</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Double</span><span class=\"mtk1\"> </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> d </span><span class=\"mtk7\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">0</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=&gt;</span><span class=\"mtk1\"> Math.</span><span class=\"mtk5\">sqrt</span><span class=\"mtk1\">(d) </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span></span></span></code></pre>","position":{"start":{"line":6,"column":1,"offset":676},"end":{"line":10,"column":4,"offset":788},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As is evident from the above example, we are not aware what would happen if ","position":{"start":{"line":12,"column":1,"offset":790},"end":{"line":12,"column":77,"offset":866},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">d</code>","position":{"start":{"line":12,"column":77,"offset":866},"end":{"line":12,"column":80,"offset":869},"indent":[]}},{"type":"text","value":" is less than 0.","position":{"start":{"line":12,"column":80,"offset":869},"end":{"line":12,"column":96,"offset":885},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":790},"end":{"line":12,"column":96,"offset":885},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Advantages","position":{"start":{"line":14,"column":5,"offset":891},"end":{"line":14,"column":15,"offset":901},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":887},"end":{"line":14,"column":15,"offset":901},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":15,"column":1,"offset":902},"end":{"line":15,"column":15,"offset":916},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">list</code>","position":{"start":{"line":15,"column":15,"offset":916},"end":{"line":15,"column":21,"offset":922},"indent":[]}},{"type":"text","value":" of numbers having some values.","position":{"start":{"line":15,"column":21,"offset":922},"end":{"line":15,"column":52,"offset":953},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":902},"end":{"line":15,"column":52,"offset":953},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val list</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">List</span><span class=\"mtk1\">[Double] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">List</span><span class=\"mtk1\">(</span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">16</span><span class=\"mtk1\">, </span><span class=\"mtk4\">25</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">9</span><span class=\"mtk1\">)</span></span></span></code></pre>","position":{"start":{"line":17,"column":1,"offset":955},"end":{"line":19,"column":4,"offset":1011},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If I use a simple ","position":{"start":{"line":21,"column":1,"offset":1013},"end":{"line":21,"column":19,"offset":1031},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">map</code>","position":{"start":{"line":21,"column":19,"offset":1031},"end":{"line":21,"column":24,"offset":1036},"indent":[]}},{"type":"text","value":" function with ","position":{"start":{"line":21,"column":24,"offset":1036},"end":{"line":21,"column":39,"offset":1051},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Math.sqrt()</code>","position":{"start":{"line":21,"column":39,"offset":1051},"end":{"line":21,"column":52,"offset":1064},"indent":[]}},{"type":"text","value":", then I’ll get an annoying ","position":{"start":{"line":21,"column":52,"offset":1064},"end":{"line":21,"column":80,"offset":1092},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">NaN</code>","position":{"start":{"line":21,"column":80,"offset":1092},"end":{"line":21,"column":85,"offset":1097},"indent":[]}},{"type":"text","value":" at the end of my ","position":{"start":{"line":21,"column":85,"offset":1097},"end":{"line":21,"column":103,"offset":1115},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">result</code>","position":{"start":{"line":21,"column":103,"offset":1115},"end":{"line":21,"column":111,"offset":1123},"indent":[]}},{"type":"text","value":" list.","position":{"start":{"line":21,"column":111,"offset":1123},"end":{"line":21,"column":117,"offset":1129},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1013},"end":{"line":21,"column":117,"offset":1129},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val result </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> list.</span><span class=\"mtk5\">map</span><span class=\"mtk1\">(Math.sqrt)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">result</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">List</span><span class=\"mtk1\">[Double] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">List</span><span class=\"mtk1\">(</span><span class=\"mtk4\">2.0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4.0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5.0</span><span class=\"mtk1\">, NaN)</span></span></span></code></pre>","position":{"start":{"line":23,"column":1,"offset":1131},"end":{"line":26,"column":4,"offset":1223},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We never intended to have a ","position":{"start":{"line":28,"column":1,"offset":1225},"end":{"line":28,"column":29,"offset":1253},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">NaN</code>","position":{"start":{"line":28,"column":29,"offset":1253},"end":{"line":28,"column":34,"offset":1258},"indent":[]}},{"type":"text","value":" value in our result. What could be worse? We could have got an exception.","position":{"start":{"line":28,"column":34,"offset":1258},"end":{"line":28,"column":108,"offset":1332},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1225},"end":{"line":28,"column":108,"offset":1332},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let us try to use our previously defined ","position":{"start":{"line":30,"column":1,"offset":1334},"end":{"line":30,"column":42,"offset":1375},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">squareRoot</code>","position":{"start":{"line":30,"column":42,"offset":1375},"end":{"line":30,"column":54,"offset":1387},"indent":[]}},{"type":"text","value":" partial function along with ","position":{"start":{"line":30,"column":54,"offset":1387},"end":{"line":30,"column":83,"offset":1416},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">collect</code>","position":{"start":{"line":30,"column":83,"offset":1416},"end":{"line":30,"column":92,"offset":1425},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":30,"column":92,"offset":1425},"end":{"line":30,"column":93,"offset":1426},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1334},"end":{"line":30,"column":93,"offset":1426},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val result </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> list.</span><span class=\"mtk5\">collect</span><span class=\"mtk1\">(squareRoot)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">result</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">List</span><span class=\"mtk1\">[Double] </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">List</span><span class=\"mtk1\">(</span><span class=\"mtk4\">2.0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4.0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5.0</span><span class=\"mtk1\">)</span></span></span></code></pre>","position":{"start":{"line":32,"column":1,"offset":1428},"end":{"line":35,"column":4,"offset":1520},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And this time, we can observe that we do not have any unwanted elements in our result list. Thus, partial functions can help us to get rid of any side effects.","position":{"start":{"line":37,"column":1,"offset":1522},"end":{"line":37,"column":160,"offset":1681},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1522},"end":{"line":37,"column":160,"offset":1681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are other helpful functions such as ","position":{"start":{"line":39,"column":1,"offset":1683},"end":{"line":39,"column":43,"offset":1725},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">orElse</code>","position":{"start":{"line":39,"column":43,"offset":1725},"end":{"line":39,"column":51,"offset":1733},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":39,"column":51,"offset":1733},"end":{"line":39,"column":56,"offset":1738},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">andThen</code>","position":{"start":{"line":39,"column":56,"offset":1738},"end":{"line":39,"column":65,"offset":1747},"indent":[]}},{"type":"text","value":" that can be used with partial functions.","position":{"start":{"line":39,"column":65,"offset":1747},"end":{"line":39,"column":106,"offset":1788},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1683},"end":{"line":39,"column":106,"offset":1788},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Below is a nice tutorial that provides few more hands-on examples of partial functions in Scala.","position":{"start":{"line":41,"column":1,"offset":1790},"end":{"line":41,"column":97,"offset":1886},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1790},"end":{"line":41,"column":97,"offset":1886},"indent":[]}},{"type":"html","value":"<iframe src=\"https://www.youtube.com/embed/DJ3RbPYbNHg\"></iframe>","position":{"start":{"line":43,"column":1,"offset":1888},"end":{"line":43,"column":66,"offset":1953},"indent":[]}},{"type":"html","value":"<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":1,"offset":1954}}}}