{"expireTime":9007200872112995000,"key":"transformer-remark-markdown-html-ast-bfe8d6326507d61a68f523edefc055ce-gatsby-remark-imagesgatsby-remark-vscodegatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-smartypantsgatsby-remark-copy-linked-filesgatsby-remark-reading-timegatsby-remark-social-cards-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similar to Java, Scala also supports variable arguments or repeated method parameters. The concept is really useful in situations when you donâ€™t know how many parameters you need to pass to a method, or you have to pass an unlimited number of arguments to a method.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":266,"offset":266}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":266,"offset":266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, there are few conditions to using repeated method parameters in Scala","position":{"start":{"line":4,"column":1,"offset":268},"end":{"line":4,"column":79,"offset":346}}}],"position":{"start":{"line":4,"column":1,"offset":268},"end":{"line":4,"column":79,"offset":346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All the repeated parameters must be of the same type.","position":{"start":{"line":6,"column":3,"offset":350},"end":{"line":6,"column":56,"offset":403}}}],"position":{"start":{"line":6,"column":1,"offset":348},"end":{"line":7,"column":1,"offset":404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We can only have one argument as a repeated parameter in the method definition. We cannot declare 2 repeated parameters for a method.","position":{"start":{"line":8,"column":3,"offset":407},"end":{"line":8,"column":136,"offset":540}}}],"position":{"start":{"line":8,"column":1,"offset":405},"end":{"line":9,"column":1,"offset":541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Scala only allows the last parameter of the method call to be repeated.","position":{"start":{"line":10,"column":3,"offset":544},"end":{"line":10,"column":74,"offset":615}}}],"position":{"start":{"line":10,"column":1,"offset":542},"end":{"line":10,"column":74,"offset":615}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":348},"end":{"line":10,"column":74,"offset":615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To denote a repeated parameter, place an asterisk after the type of the parameter. For example, below is a sum method that would calculate the sum of all the numbers passed to the method.","position":{"start":{"line":12,"column":1,"offset":617},"end":{"line":12,"column":188,"offset":804}}}],"position":{"start":{"line":12,"column":1,"offset":617},"end":{"line":12,"column":188,"offset":804}}},{"type":"text","value":"\n"},{"type":"raw","value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">def </span><span class=\"mtk5\">sum</span><span class=\"mtk1\">(args</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> Int</span><span class=\"mtk7\">*</span><span class=\"mtk1\">)</span><span class=\"mtk7\">:</span><span class=\"mtk1\"> Int </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> args.</span><span class=\"mtk5\">fold</span><span class=\"mtk1\">(</span><span class=\"mtk4\">0</span><span class=\"mtk1\">)(_</span><span class=\"mtk7\">+</span><span class=\"mtk1\">_)</span></span></span></code></pre>","position":{"start":{"line":14,"column":1,"offset":806},"end":{"line":16,"column":4,"offset":862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can call sum as ","position":{"start":{"line":18,"column":1,"offset":864},"end":{"line":18,"column":21,"offset":884}}},{"type":"raw","value":"<code class=\"language-text\">sum()</code>","position":{"start":{"line":18,"column":21,"offset":884},"end":{"line":18,"column":28,"offset":891}}},{"type":"text","value":" or ","position":{"start":{"line":18,"column":28,"offset":891},"end":{"line":18,"column":32,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">sum(3,4)</code>","position":{"start":{"line":18,"column":32,"offset":895},"end":{"line":18,"column":42,"offset":905}}},{"type":"text","value":" or ","position":{"start":{"line":18,"column":42,"offset":905},"end":{"line":18,"column":46,"offset":909}}},{"type":"raw","value":"<code class=\"language-text\">sum(1,3,4,5,7,8,9)</code>","position":{"start":{"line":18,"column":46,"offset":909},"end":{"line":18,"column":66,"offset":929}}},{"type":"text","value":". Scala treats incoming parameters as arrays. However, if you try to pass an array to ","position":{"start":{"line":18,"column":66,"offset":929},"end":{"line":18,"column":152,"offset":1015}}},{"type":"raw","value":"<code class=\"language-text\">sum()</code>","position":{"start":{"line":18,"column":152,"offset":1015},"end":{"line":18,"column":159,"offset":1022}}},{"type":"text","value":", Scala will throw a type mismatch error.","position":{"start":{"line":18,"column":159,"offset":1022},"end":{"line":18,"column":200,"offset":1063}}}],"position":{"start":{"line":18,"column":1,"offset":864},"end":{"line":18,"column":200,"offset":1063}}},{"type":"text","value":"\n"},{"type":"raw","value":"<pre class=\"grvsc-container grvsc-has-line-highlighting monokai\" data-language=\"shell\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">scala&gt; sum(Array(1,2))</span></span>\n<span class=\"grvsc-line grvsc-line-highlighted\"><span class=\"grvsc-source\">&lt;console&gt;:13: error: type mismatch</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"> found   : Array[Int]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"> required: Int</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       sum(Array(1,2))</span></span></code></pre>","position":{"start":{"line":20,"column":1,"offset":1065},"end":{"line":26,"column":4,"offset":1198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In order to pass an array, we need to append the argument with a colon and an","position":{"start":{"line":28,"column":1,"offset":1200},"end":{"line":28,"column":78,"offset":1277}}},{"type":"raw","value":"<code class=\"language-text\">_*</code>","position":{"start":{"line":28,"column":78,"offset":1277},"end":{"line":28,"column":83,"offset":1282}}},{"type":"text","value":" symbol.","position":{"start":{"line":28,"column":83,"offset":1282},"end":{"line":28,"column":91,"offset":1290}}}],"position":{"start":{"line":28,"column":1,"offset":1200},"end":{"line":28,"column":91,"offset":1290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This notation will ask the compiler to pass each element of the array as a single argument. So array elements are passed one by one to ","position":{"start":{"line":30,"column":1,"offset":1292},"end":{"line":30,"column":136,"offset":1427}}},{"type":"raw","value":"<code class=\"language-text\">sum()</code>","position":{"start":{"line":30,"column":136,"offset":1427},"end":{"line":30,"column":143,"offset":1434}}},{"type":"text","value":", rather than all of it as a single argument.","position":{"start":{"line":30,"column":143,"offset":1434},"end":{"line":30,"column":188,"offset":1479}}}],"position":{"start":{"line":30,"column":1,"offset":1292},"end":{"line":30,"column":188,"offset":1479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The video tutorial talks about the same concepts in more detail and provides few more examples.","position":{"start":{"line":32,"column":1,"offset":1481},"end":{"line":32,"column":96,"offset":1576}}}],"position":{"start":{"line":32,"column":1,"offset":1481},"end":{"line":32,"column":96,"offset":1576}}},{"type":"text","value":"\n"},{"type":"raw","value":"<iframe src=\"https://www.youtube.com/embed/tyHswiV2gvk?list=PLiRMk2ipn1vqwRMy6NhroeQOmY1x1-rTH\"></iframe>","position":{"start":{"line":34,"column":1,"offset":1578},"end":{"line":34,"column":106,"offset":1683}}},{"type":"text","value":"\n"},{"type":"raw","value":"<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":1,"offset":1684}}}}