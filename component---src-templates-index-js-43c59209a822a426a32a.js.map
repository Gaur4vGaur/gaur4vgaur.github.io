{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["BlogIndex","render","data","this","props","blogTitle","site","siteMetadata","title","subtitle","authorName","author","bio","profilePic","childImageSharp","fluid","posts","allMarkdownRemark","edges","pageContext","isFirstPage","isLastPage","currentPage","totalPages","nextPage","String","prevPage","className","alt","to","map","post","index","key","node","frontmatter","date","fields","readingTime","text","slug","description","rel","Array","from","length","_","React","Component"],"mappings":"gMAQMA,E,kGACFC,OAAA,WAAU,IACCC,EAAQC,KAAKC,MAAbF,KACDG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAWP,EAAKI,KAAKC,aAAaE,SAClCC,EAAaR,EAAKI,KAAKC,aAAaI,OACpCC,EAAMV,EAAKI,KAAKC,aAAaK,IAC7BC,EAAaX,EAAKW,WAAWC,gBAAgBC,MAE7CC,EAAQd,EAAKe,kBAAkBC,MARhC,EAUwDf,KAAKC,MAAMe,YAAhEC,EAVH,EAUGA,YAAaC,EAVhB,EAUgBA,WAAYC,EAV5B,EAU4BA,YAAaC,EAVzC,EAUyCA,WACxCC,EAAQ,IAAOC,OAAOH,EAAc,GACpCI,EAAWJ,EAAc,GAAM,EAAI,IAAxB,IAAkCG,OAAOH,EAAc,GAGxE,OACI,kBAAC,IAAD,CAAQd,MAAOH,EAAWI,SAAUA,GAChC,kBAAC,IAAD,CAAKD,MAAM,kBACX,yBAAKmB,UAAU,kBACX,+BACI,kBAAC,IAAD,CAAKZ,MAAOF,EAAYe,IAAG,UAAYlB,IACvC,4BAAKA,GACL,2BAAIE,GACJ,kBAAC,OAAD,CAAMiB,GAAG,qCAAT,gBAEJ,iCAEQb,EAAMc,KAAI,SAACC,EAAMC,GACjB,OACI,yBAAKL,UAAU,eAAeM,IAAKD,GAC/B,2BAAID,EAAKG,KAAKC,YAAYC,KAA1B,IAAiC,kCAAQL,EAAKG,KAAKG,OAAOC,YAAYC,KAArC,MACjC,kBAAC,OAAD,CAAMV,GAAIE,EAAKG,KAAKG,OAAOG,MACvB,wBAAIb,UAAU,mBAAmBI,EAAKG,KAAKC,YAAY3B,QAE3D,yBAAKmB,UAAU,WAAWI,EAAKG,KAAKC,YAAYM,mBAQpE,yBAAKd,UAAU,oBACTP,GACE,kBAAC,OAAD,CAAMS,GAAIH,EAAUgB,IAAI,QAAxB,KAIHC,MAAMC,KAAK,CAAEC,OAAQtB,IAAc,SAACuB,EAAGd,GAAJ,OAChC,kBAAC,OAAD,CAAMC,IAAKD,EAAOH,GAAE,KAAgB,IAAVG,EAAc,GAAKA,EAAQ,IAChDA,EAAQ,OAGfX,GACE,kBAAC,OAAD,CAAMQ,GAAIL,EAAUkB,IAAI,QAAxB,Q,GAvDAK,IAAMC,WAiEfhD","file":"component---src-templates-index-js-43c59209a822a426a32a.js","sourcesContent":["import React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nclass BlogIndex extends React.Component {\n    render() {\n        const {data} = this.props;\n        const blogTitle = data.site.siteMetadata.title;\n        const subtitle = data.site.siteMetadata.subtitle;\n        const authorName = data.site.siteMetadata.author;\n        const bio = data.site.siteMetadata.bio;\n        const profilePic = data.profilePic.childImageSharp.fluid;\n\n        const posts = data.allMarkdownRemark.edges;\n\n        const { isFirstPage, isLastPage, currentPage, totalPages } = this.props.pageContext;\n        const nextPage = `/${String(currentPage + 1)}`\n        const prevPage = currentPage - 1 === 1 ? '/' : `/${String(currentPage - 1)}`\n\n\n        return (\n            <Layout title={blogTitle} subtitle={subtitle}>\n                <SEO title=\"Code Thoughts\"/>\n                <div className=\"blog-container\">\n                    <aside>\n                        <Img fluid={profilePic} alt={`Author ${authorName}`}/>\n                        <h3>{authorName}</h3>\n                        <p>{bio}</p>\n                        <Link to=\"mailto:gauravgaur.email@gmail.com\"> Contact me</Link>\n                    </aside>\n                    <section>\n                        {\n                            posts.map((post, index) => {\n                            return (\n                                <div className=\"post-summary\" key={index}>\n                                    <p>{post.node.frontmatter.date } <span> {post.node.fields.readingTime.text} </span></p>\n                                    <Link to={post.node.fields.slug}>\n                                        <h2 className=\"post-navigation\">{post.node.frontmatter.title}</h2>\n                                    </Link>\n                                    <div className=\"content\">{post.node.frontmatter.description}</div>\n                                </div>\n                            );\n                            })\n                        }\n                    </section>\n                </div>\n                {/* Pagination Links */}\n                <div className=\"post-pagination\">\n                    {!isFirstPage && (\n                        <Link to={prevPage} rel=\"prev\">\n                            &lt;\n                        </Link>\n                    )}\n                    {Array.from({ length: totalPages }, (_, index) => (\n                        <Link key={index} to={`/${index === 0 ? '' : index + 1}`}>\n                            {index + 1}\n                        </Link>\n                    ))}\n                    {!isLastPage && (\n                        <Link to={nextPage} rel=\"next\">\n                            &gt;\n                        </Link>\n                    )}\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n\tquery ($skip: Int!, $limit: Int!){\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tsubtitle\n\t\t\t\tauthor\n\t\t\t\tbio\n\t\t\t}\n\t\t}\n\t\tallMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }\n\t\tskip: $skip\n        limit: $limit\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\texcerpt\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\treadingTime {\n                          text\n                        }\n\t\t\t\t\t}\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tsubtitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprofilePic: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid(maxWidth: 200, maxHeight: 200) {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}