{"expireTime":9007200872112995000,"key":"transformer-remark-markdown-ast-ef86df2587c5e10c079dc2ecfaea540e-gatsby-remark-imagesgatsby-remark-vscodegatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-smartypantsgatsby-remark-copy-linked-filesgatsby-remark-reading-timegatsby-remark-social-cards-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"One of the most common ADT that a developer uses in their day-to-day coding is List. And one of the most common operations a developer performs on a list is to order it or sort it with given criteria. In this article, I will focus on sorting a list of objects in Scala.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":270,"offset":270},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":270,"offset":270},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Mainly, there are two ways of sorting a list in Scala, i.e.","position":{"start":{"line":4,"column":1,"offset":272},"end":{"line":4,"column":60,"offset":331},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":272},"end":{"line":4,"column":60,"offset":331},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">sortWith</code>","position":{"start":{"line":6,"column":3,"offset":335},"end":{"line":6,"column":17,"offset":349},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":335},"end":{"line":6,"column":17,"offset":349},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":333},"end":{"line":6,"column":17,"offset":349},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">sortBy</code>","position":{"start":{"line":7,"column":3,"offset":352},"end":{"line":7,"column":11,"offset":360},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":352},"end":{"line":7,"column":11,"offset":360},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":350},"end":{"line":7,"column":11,"offset":360},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":333},"end":{"line":7,"column":11,"offset":360},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Letâ€™s consider the popular example of sorting IMDB ratings. Below is my IMDB class.","position":{"start":{"line":9,"column":1,"offset":362},"end":{"line":9,"column":84,"offset":445},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":362},"end":{"line":9,"column":84,"offset":445},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">case </span><span class=\"mtk7\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">ImdbRating</span><span class=\"mtk1\">(name: String, ratings: Double)</span></span></span></code></pre>","position":{"start":{"line":11,"column":1,"offset":447},"end":{"line":13,"column":4,"offset":511},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here is a list of the top five rated movies of all time (source).","position":{"start":{"line":15,"column":1,"offset":513},"end":{"line":15,"column":66,"offset":578},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":513},"end":{"line":15,"column":66,"offset":578},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val ratings </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">List</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">ImdbRating</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;The Shawshank Redemption&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9.3</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">ImdbRating</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;The Godfather &quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9.2</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">ImdbRating</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;The Dark Knight&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9.1</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">ImdbRating</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;The Godfather: Part II&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9.0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">ImdbRating</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;The Lord of the Rings: The Return of the King&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">8.9</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">)</span></span></span></code></pre>","position":{"start":{"line":18,"column":1,"offset":581},"end":{"line":26,"column":4,"offset":848},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you observe closely, the above list is ordered by ratings, but my requirement is to order movies by length of their names.","position":{"start":{"line":28,"column":1,"offset":850},"end":{"line":28,"column":126,"offset":975},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":850},"end":{"line":28,"column":126,"offset":975},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"sortWith","position":{"start":{"line":30,"column":5,"offset":981},"end":{"line":30,"column":13,"offset":989},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":977},"end":{"line":30,"column":13,"offset":989},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, I will try to order the list using ","position":{"start":{"line":31,"column":1,"offset":990},"end":{"line":31,"column":43,"offset":1032},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sortWith</code>","position":{"start":{"line":31,"column":43,"offset":1032},"end":{"line":31,"column":53,"offset":1042},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":31,"column":53,"offset":1042},"end":{"line":31,"column":55,"offset":1044},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sortWith</code>","position":{"start":{"line":31,"column":55,"offset":1044},"end":{"line":31,"column":65,"offset":1054},"indent":[]}},{"type":"text","value":" sorts a given list based on the comparison function that is provided to it. It is a stable sort, which means that an item will not lose its original position if two elements are equal. Here is the code to sort the list by length of names:","position":{"start":{"line":31,"column":65,"offset":1054},"end":{"line":31,"column":304,"offset":1293},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":990},"end":{"line":31,"column":304,"offset":1293},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val sortedRatings </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> ratings.</span><span class=\"mtk5\">sortWith</span><span class=\"mtk1\">(_.name.size </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\"> _.name.size)</span></span></span></code></pre>","position":{"start":{"line":33,"column":1,"offset":1295},"end":{"line":35,"column":4,"offset":1370},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If I want to order the list in descending order, then all I need to do is to reverse the ","position":{"start":{"line":37,"column":1,"offset":1372},"end":{"line":37,"column":90,"offset":1461},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;</code>","position":{"start":{"line":37,"column":90,"offset":1461},"end":{"line":37,"column":93,"offset":1464},"indent":[]}},{"type":"text","value":" operator. ","position":{"start":{"line":37,"column":93,"offset":1464},"end":{"line":37,"column":104,"offset":1475},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1372},"end":{"line":37,"column":104,"offset":1475},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"sortBy","position":{"start":{"line":39,"column":5,"offset":1481},"end":{"line":39,"column":11,"offset":1487},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1477},"end":{"line":39,"column":11,"offset":1487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another way to order the above list is to use ","position":{"start":{"line":40,"column":1,"offset":1488},"end":{"line":40,"column":47,"offset":1534},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sortBy</code>","position":{"start":{"line":40,"column":47,"offset":1534},"end":{"line":40,"column":55,"offset":1542},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":40,"column":55,"offset":1542},"end":{"line":40,"column":57,"offset":1544},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sortBy</code>","position":{"start":{"line":40,"column":57,"offset":1544},"end":{"line":40,"column":65,"offset":1552},"indent":[]}},{"type":"text","value":" sorts a given sequence according to the implicitly defined natural ","position":{"start":{"line":40,"column":65,"offset":1552},"end":{"line":40,"column":133,"offset":1620},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Ordering</code>","position":{"start":{"line":40,"column":133,"offset":1620},"end":{"line":40,"column":143,"offset":1630},"indent":[]}},{"type":"text","value":". Like ","position":{"start":{"line":40,"column":143,"offset":1630},"end":{"line":40,"column":150,"offset":1637},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">sortWith</code>","position":{"start":{"line":40,"column":150,"offset":1637},"end":{"line":40,"column":160,"offset":1647},"indent":[]}},{"type":"text","value":", this sort is stable as well. Here is the code to order the list.","position":{"start":{"line":40,"column":160,"offset":1647},"end":{"line":40,"column":226,"offset":1713},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1488},"end":{"line":40,"column":226,"offset":1713},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<pre class=\"grvsc-container monokai\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val sortedRatings </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> ratings.</span><span class=\"mtk5\">sortBy</span><span class=\"mtk1\">(_.name.size)</span></span></span></code></pre>","position":{"start":{"line":42,"column":1,"offset":1715},"end":{"line":44,"column":4,"offset":1774},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There is a third way to sort the list of objects that I have not discussed here, and that is to extend the ","position":{"start":{"line":46,"column":1,"offset":1776},"end":{"line":46,"column":108,"offset":1883},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Ordered</code>","position":{"start":{"line":46,"column":108,"offset":1883},"end":{"line":46,"column":117,"offset":1892},"indent":[]}},{"type":"text","value":" trait. The trait forces you to implement the ","position":{"start":{"line":46,"column":117,"offset":1892},"end":{"line":46,"column":163,"offset":1938},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">compare</code>","position":{"start":{"line":46,"column":163,"offset":1938},"end":{"line":46,"column":172,"offset":1947},"indent":[]}},{"type":"text","value":" method. ","position":{"start":{"line":46,"column":172,"offset":1947},"end":{"line":46,"column":181,"offset":1956},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Ordered</code>","position":{"start":{"line":46,"column":181,"offset":1956},"end":{"line":46,"column":190,"offset":1965},"indent":[]}},{"type":"text","value":" trait is somewhat like ","position":{"start":{"line":46,"column":190,"offset":1965},"end":{"line":46,"column":214,"offset":1989},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Comparable</code>","position":{"start":{"line":46,"column":214,"offset":1989},"end":{"line":46,"column":226,"offset":2001},"indent":[]}},{"type":"text","value":" interfaces in java.","position":{"start":{"line":46,"column":226,"offset":2001},"end":{"line":46,"column":246,"offset":2021},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1776},"end":{"line":46,"column":246,"offset":2021},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you want more details about sorting or Ordered trait, you can refer to the following videos in which I provide additional examples.","position":{"start":{"line":48,"column":1,"offset":2023},"end":{"line":48,"column":135,"offset":2157},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2023},"end":{"line":48,"column":135,"offset":2157},"indent":[]}},{"type":"html","value":"<iframe src=\"https://www.youtube.com/embed/hjY_mC7dPxc\"></iframe>","position":{"start":{"line":50,"column":1,"offset":2159},"end":{"line":50,"column":66,"offset":2224},"indent":[]}},{"type":"html","value":"<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtku {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":51,"column":1,"offset":2225}}}}