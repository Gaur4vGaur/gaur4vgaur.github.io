{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["BlogIndex","render","data","this","props","blogTitle","site","siteMetadata","title","subtitle","authorName","author","bio","profilePic","childImageSharp","fluid","posts","allMarkdownRemark","edges","pageContext","isFirstPage","isLastPage","currentPage","totalPages","nextPage","String","prevPage","className","alt","href","target","viewBox","d","map","post","index","key","node","frontmatter","date","fields","readingTime","text","to","slug","description","rel","Array","from","length","_","React","Component"],"mappings":"gMAQMA,E,kGACFC,OAAA,WAAU,IACCC,EAAQC,KAAKC,MAAbF,KACDG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAWP,EAAKI,KAAKC,aAAaE,SAClCC,EAAaR,EAAKI,KAAKC,aAAaI,OACpCC,EAAMV,EAAKI,KAAKC,aAAaK,IAC7BC,EAAaX,EAAKW,WAAWC,gBAAgBC,MAE7CC,EAAQd,EAAKe,kBAAkBC,MARhC,EAUwDf,KAAKC,MAAMe,YAAhEC,EAVH,EAUGA,YAAaC,EAVhB,EAUgBA,WAAYC,EAV5B,EAU4BA,YAAaC,EAVzC,EAUyCA,WACxCC,EAAQ,IAAOC,OAAOH,EAAc,GACpCI,EAAWJ,EAAc,GAAM,EAAI,IAAxB,IAAkCG,OAAOH,EAAc,GAGxE,OACI,kBAAC,IAAD,CAAQd,MAAOH,EAAWI,SAAUA,GAChC,kBAAC,IAAD,CAAKD,MAAM,kBACX,yBAAKmB,UAAU,kBACX,+BACI,kBAAC,IAAD,CAAKZ,MAAOF,EAAYe,IAAG,UAAYlB,IACvC,4BAAKA,GACL,2BAAIE,GACJ,uBAAGiB,KAAK,gCAAR,eACA,yBAAKF,UAAU,gBACX,wBAAIA,UAAU,iBACV,wBAAIA,UAAU,sBACV,uBAAGA,UAAU,2BACbE,KAAK,6CAA6CC,OAAO,UACzD,yBAAKH,UAAU,iBAAiBI,QAAQ,aACpC,0CACA,0BAAMC,EAAE,yPAGhB,wBAAIL,UAAU,sBACV,uBAAGA,UAAU,2BACbE,KAAK,iCAAiCC,OAAO,UAC7C,yBAAKH,UAAU,iBAAiBI,QAAQ,aACpC,0CACA,0BAAMC,EAAE,ssBAM5B,iCAEQhB,EAAMiB,KAAI,SAACC,EAAMC,GACjB,OACI,yBAAKR,UAAU,eAAeS,IAAKD,GAC/B,2BAAID,EAAKG,KAAKC,YAAYC,KAA1B,IAAiC,kCAAQL,EAAKG,KAAKG,OAAOC,YAAYC,KAArC,MACjC,kBAAC,OAAD,CAAMC,GAAIT,EAAKG,KAAKG,OAAOI,MACvB,wBAAIjB,UAAU,mBAAmBO,EAAKG,KAAKC,YAAY9B,QAE3D,yBAAKmB,UAAU,WAAWO,EAAKG,KAAKC,YAAYO,mBAQpE,yBAAKlB,UAAU,oBACTP,GACE,kBAAC,OAAD,CAAMuB,GAAIjB,EAAUoB,IAAI,QAAxB,KAIHC,MAAMC,KAAK,CAAEC,OAAQ1B,IAAc,SAAC2B,EAAGf,GAAJ,OAChC,kBAAC,OAAD,CAAMC,IAAKD,EAAOQ,GAAE,KAAgB,IAAVR,EAAc,GAAKA,EAAQ,IAChDA,EAAQ,OAGfd,GACE,kBAAC,OAAD,CAAMsB,GAAInB,EAAUsB,IAAI,QAAxB,Q,GA3EAK,IAAMC,WAqFfpD","file":"component---src-templates-index-js-f695485083144eef412f.js","sourcesContent":["import React from 'react';\nimport {Link, graphql} from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nclass BlogIndex extends React.Component {\n    render() {\n        const {data} = this.props;\n        const blogTitle = data.site.siteMetadata.title;\n        const subtitle = data.site.siteMetadata.subtitle;\n        const authorName = data.site.siteMetadata.author;\n        const bio = data.site.siteMetadata.bio;\n        const profilePic = data.profilePic.childImageSharp.fluid;\n\n        const posts = data.allMarkdownRemark.edges;\n\n        const { isFirstPage, isLastPage, currentPage, totalPages } = this.props.pageContext;\n        const nextPage = `/${String(currentPage + 1)}`\n        const prevPage = currentPage - 1 === 1 ? '/' : `/${String(currentPage - 1)}`\n\n\n        return (\n            <Layout title={blogTitle} subtitle={subtitle}>\n                <SEO title=\"Code Thoughts\"/>\n                <div className=\"blog-container\">\n                    <aside>\n                        <Img fluid={profilePic} alt={`Author ${authorName}`}/>\n                        <h3>{authorName}</h3>\n                        <p>{bio}</p>\n                        <a href=\"mailto:gaurav@gaurgaurav.com\"> Contact me</a>\n                        <div className=\"contacts-div\">\n                            <ul className=\"contacts-list\">\n                                <li className=\"contacts-list-item\">\n                                    <a className=\"contacts-list-item-links\"\n                                    href=\"https://www.youtube.com/user/gauravgaur91/\" target=\"_blank\">\n                                    <svg className=\"contacts-icons\" viewBox=\"0 0 24 24\">\n                                        <title>YouTube</title>\n                                        <path d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"/>\n                                    </svg>\n                                </a></li>\n                                <li className=\"contacts-list-item\">\n                                    <a className=\"contacts-list-item-links\"\n                                    href=\"https://twitter.com/Gaur4vGaur\" target=\"_blank\">\n                                    <svg className=\"contacts-icons\" viewBox=\"0 0 26 28\">\n                                        <title>twitter</title>\n                                        <path d=\"M25.312 6.375c-0.688 1-1.547 1.891-2.531 2.609 0.016 0.219 0.016 0.438 0.016 0.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-0.828-7.75-2.266 0.406 0.047 0.797 0.063 1.219 0.063 2.359 0 4.531-0.797 6.266-2.156-2.219-0.047-4.078-1.5-4.719-3.5 0.313 0.047 0.625 0.078 0.953 0.078 0.453 0 0.906-0.063 1.328-0.172-2.312-0.469-4.047-2.5-4.047-4.953v-0.063c0.672 0.375 1.453 0.609 2.281 0.641-1.359-0.906-2.25-2.453-2.25-4.203 0-0.938 0.25-1.797 0.688-2.547 2.484 3.062 6.219 5.063 10.406 5.281-0.078-0.375-0.125-0.766-0.125-1.156 0-2.781 2.25-5.047 5.047-5.047 1.453 0 2.766 0.609 3.687 1.594 1.141-0.219 2.234-0.641 3.203-1.219-0.375 1.172-1.172 2.156-2.219 2.781 1.016-0.109 2-0.391 2.906-0.781z\"></path>\n                                    </svg>\n                                </a></li>\n                            </ul>\n                        </div>\n                    </aside>\n                    <section>\n                        {\n                            posts.map((post, index) => {\n                            return (\n                                <div className=\"post-summary\" key={index}>\n                                    <p>{post.node.frontmatter.date } <span> {post.node.fields.readingTime.text} </span></p>\n                                    <Link to={post.node.fields.slug}>\n                                        <h2 className=\"post-navigation\">{post.node.frontmatter.title}</h2>\n                                    </Link>\n                                    <div className=\"content\">{post.node.frontmatter.description}</div>\n                                </div>\n                            );\n                            })\n                        }\n                    </section>\n                </div>\n                {/* Pagination Links */}\n                <div className=\"post-pagination\">\n                    {!isFirstPage && (\n                        <Link to={prevPage} rel=\"prev\">\n                            &lt;\n                        </Link>\n                    )}\n                    {Array.from({ length: totalPages }, (_, index) => (\n                        <Link key={index} to={`/${index === 0 ? '' : index + 1}`}>\n                            {index + 1}\n                        </Link>\n                    ))}\n                    {!isLastPage && (\n                        <Link to={nextPage} rel=\"next\">\n                            &gt;\n                        </Link>\n                    )}\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n\tquery ($skip: Int!, $limit: Int!){\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tsubtitle\n\t\t\t\tauthor\n\t\t\t\tbio\n\t\t\t}\n\t\t}\n\t\tallMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }\n\t\tskip: $skip\n        limit: $limit\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\texcerpt\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\treadingTime {\n                          text\n                        }\n\t\t\t\t\t}\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tsubtitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprofilePic: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid(maxWidth: 200, maxHeight: 200) {\n\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}