{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Blog Starter","author":"Gaurav Gaur","bio":"Gaurav Gaur Bio"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"This is a sample mardown file","fields":{"slug":"/example/"},"html":"<p>This is a sample mardown file</p>","frontmatter":{"date":null,"title":"","description":null}}},{"node":{"excerpt":"This is a dummy blog but you can still read it!","fields":{"slug":"/my-own-blog/"},"html":"<p>This is a dummy blog but you can still read it!</p>","frontmatter":{"date":"June 09, 2021","title":"My own blog","description":"This is a dummy blog and will be removed soon"}}},{"node":{"excerpt":"Tag Manager is an incredibly useful tool for tracking events on your site. The only problem is, if you’ve never used it before, it isn’t…","fields":{"slug":"/tracking-events-with-tag-manager/"},"html":"<p>Tag Manager is an incredibly useful tool for tracking events on your site. The only problem is, if you’ve never used it before, it isn’t very clear how to use it or how to tie all the pieces together. I know it took me a good amount of experimenting before I reached a point where the setup started to make sense to me. If you don’t already have a Tag Manager account I recommend reading <a href=\"http://www.rachellerathbone.com/create-tag-manager-account\">Setting Up a Tag Manager Account</a>. You’ll also need to make sure you have a Google Analytics account as GA is where you’ll be able to view all the data created by your Tag Manager Tag.</p>\n<p>Navigate to the Tag Manager Dashboard so that we can walk through the 3 following steps:\nConfiguring Built-In Variables and Creating a New Variable\nCreating Our First Tag\nCreating Our First Trigger</p>\n<p>I’ll be walking through the flow using a blog I created for [LINK TO COURSE]. If you’re taking the course you’ll simply be able to do exactly as I do - we’ll be adding an event to the ‘Read more’ buttons so we can track the number of users who navigate their way to a post from the home page. For those of you who have organically found your way here, the process should be pretty easy to modify to something on your own site that you would like to track.</p>\n<br/>\n<h3>Configuring Built-In Variables and Creating a New Variable</h3>\n<p>Tag Manager comes with a number of built-in variables that you can utilize to easily track events on your site. However, in order to use any of them for a tag or a trigger, they first need to be activated. In order to do this, select ‘Variables’ from the panel on the left side of the screen and then click ‘Configure’.</p>\n<p><img src=\"./configure-variables.png\" alt=\"Configure Variables\"></p>\n<p>Over time you may begin to use a number of the variable options available to you but for the purpose of this video we are going to select two: <code class=\"language-text\">Click Element</code> and <code class=\"language-text\">Click ID</code>.</p>\n<p>Back in the Variables dashboard, click the ‘New’ button in the ‘User-Defined Variables’ box. Name the variable ‘GA Account’ and then click anywhere within the ‘Variable Configuration’ box. When the panel pops out on the right, scroll down until you see ‘Google Analytics Settings’ and click on that. Get your Google Analytics tracking ID from you GA account (or from our gatsby-config file is you’re doing my course) and hit save.</p>\n<br/>\n<h3>Creating Our First Tag</h3>\n<p>From the panel on the left select ‘Tags’ and then click the ’New’. Replace ‘Untitled Tag’ with whatever you think is an appropriate name for your tag. For anyone taking the Gatsby course, we’re going to call our tag ‘Read More of Post’. Once you’ve done that, click anywhere on the white box ‘Tag Configuration’ and when the panel slides out, select ‘Google Analytics: Universal Analytics’.</p>\n<p>If you’ve never used Tag Manager before, this is the part where it gets easy to get lost. There’s no docs, there’s no examples, so you’re basically left to stumble around on your own trying to figure out what goes where. Luckily for you, I’ve already spent that time banging my head against a wall and am here to help!</p>\n<p>From the ‘Track Type’ dropdown, select event. You’ll see several input fields. We’ll start by dealing with the dropdowns and then come back to the input fields. Leave ‘Non-Interaction Hit’ set to false, then click on the dropdown for ‘Google Analytics Settings’ and select the <code class=\"language-text\">{{GA Account}}</code> variable that we created earlier.</p>\n<p>As for the input fields, you can basically put whatever you want in these fields. After you become familiar with Tag Manager you’ll most likely settle on your own way of structuring these fields but this is what I’ve found works for me:</p>\n<ul>\n<li><strong>Category</strong>: for this field you’ll want to select something that is an ‘umbrella’. Meaning, you want to be able to group events on your site into, well, categories. For example, the event we’ll be tracking in this example is a click event whereby a user clicks through to another page on our site. We don’t want each internal link to have it’s own category so it makes sense to put this event into a category called: ‘Clicks to internal link’. One thing to note here, Tag Manager is case sensitive so if you created an event at some point down the road and gave it the category ‘clicks to internal link’, when you checked the data in Google Analytics, you’d have some events falling into ‘Clicks to internal link’ and others into ‘clicks to internal link’.</li>\n<li><strong>Action</strong>: here we want to give a concise description of the action that we expect the user to take. For this example, let’s add ‘read more’ button from home page’.</li>\n<li><strong>Label</strong>: I typically use this input to track the page url so I know where the event was fired from. For this particular use case, however, we are going to leave this blank. We know this event will only be fired from the home page so tracking the url here would be redundant.</li>\n<li><strong>Value</strong>: I vary what goes on this field depending on what I want to pass through to Google Analytics. In the case of our ‘Read more’ button, we are going to use <code class=\"language-text\">{{CLICK ID}}</code> and add an id attribute to our button, set to <code class=\"language-text\">id={</code>data::${post.node.fields.slug}<code class=\"language-text\">}</code> so we know which posts users have clicked through to. A better option here would be to use <code class=\"language-text\">{{Click URL}}</code> instead of an id or class as this would make our tag less brittle. Unfortunately, with the way our button is sitting inside the Gatsby Link component, we don’t have access to the url from the button itself and if we move our data-gtm attribute to the Link element itself, the tag will only fire if a user clicks directly on the words ‘Read more’. Using classes and ids for tracking isn’t the best practice because there is potential for these to be accidentally removed during a refactor if someone checks the class/id and doesn’t see it being used for styling. However, sometimes using ids and classes are necessary but at least try to indicate in some way that it’s being used for something other than styling. This is why we’ve prefixed our ID with ‘data::’. Fortunately, if our ID was deleted at some point our tag wouldn’t break but we would lose some of the data we were hoping to collect.</li>\n</ul>\n<p>You’re tag should look like this:\n<img src=\"./tag.png\" alt=\"Tag\"></p>\n<p>Hit save and, when the modal pops up, click ‘Add Trigger’, followed by the + sign.</p>\n<p>Creating Our First Trigger\nStart by naming your trigger with the same name you used for your tag: ‘Read More of Post’. You may not always follow this convention but it’s what we are doing in this instance. Click anywhere inside the ‘Tag Configuration’ box and from the panel that slides out select ‘All Elements’.</p>\n<p>From the next screen click on ‘Some Clicks’ and then do the following:\nFirst dropdown: Click Element\nSecond dropdown: matches CSS selector\nInput: [data-gtm=“read-more”]</p>\n<p><img src=\"./trigger.png\" alt=\"Trigger\"></p>\n<p>I recommend using this convention for your triggers whenever possible. Usually, if a developer see’s an HTML attribute prefixed with <code class=\"language-text\">data-</code> they know it’s being used for tracking or testing and won’t just go ahead and delete it. On the other hand, if you were to use a class name or ID here, you run the risk of it being removed during a code clean up, as I mentioned earlier. However, unlike simply losing a little bit of data from one field like in the case of our tag, if your trigger was relying on an ID or class name that was deleted, the trigger would stop firing and you would lose all data for that event.</p>\n<p>Currently we don’t have any data-gtm tags in our code so take a moment to go to your text editor and that to the element you need to attach it to. For anyone doing the Gatsby course, you’ll want to add that to the ‘Read more’ button in <code class=\"language-text\">pages/index.js</code>.</p>\n<p><img src=\"./gtm-tag.png\" alt=\"Gtm Tag\"></p>\n<p>Click save. When that view collapses click save for the tag. Back in the dashboard view you should see the following:</p>\n<p><img src=\"./dashboard-view.png\" alt=\"Dashboard View\"></p>\n<p>If you can’t see the trigger listed trying refreshing your page and it should show up.</p>\n<br/>\n<h3>Testing the Trigger</h3>\n<p>Make sure your app is running and then click ‘Preview’ from the dashboard view in Tag Manager.</p>\n<p><img src=\"./preview.png\" alt=\"Preview\"></p>\n<p>When you go to your app in the browser you should see the Tag Manager console with our new tag listed under ‘Tags Not Fired On This Page’:</p>\n<p><img src=\"./tm-console.png\" alt=\"Tag Manager Console\"></p>\n<p>Now all you need to do is test out the trigger by taking the action you want your users to take. For my Gatsby course followers, simply click one of the ‘Read more’ buttons. What you should see the tag move up under ‘Tags Fired On This Page’. If you then click on the tag and then show more you should see:</p>\n<p><img src=\"./event-data.png\" alt=\"Tag Manager Data\"></p>\n<p>When you ship your changes you’ll be able to start following the event data you’re collecting in Google Analytics. One thing to note: GA will not display data for the day of. So if you have a day where you’re expecting to see a lot of traffic, an increase in a particular event being fired etc. you’ll have to wait until the following day before you can view any of that data.</p>\n<br/>\n<h3>Submitting Your Changes in Tag Manager</h3>\n<p>To see your changes take affect in the real world, head back to the Tag Manager dashboard, click ‘Leave Preview Mode’ under the orange box and then hit the blue submit button. Add whatever you feel is appropriate in the version name and description fields and then click ‘Submit’. That’s all there is to it!</p>\n<p>I hope you now have a good understanding of how to put tags and triggers together to get data about events you want to track on your site. Happy tracking :)</p>","frontmatter":{"date":"June 15, 2019","title":"Tracking Events with Tag Manager","description":"Learn how to set up tags and triggers to collect useful data from your website"}}},{"node":{"excerpt":"If you’ve been following my course ‘Hands-On Web Development with React and GatsbyJS’ then this is the post you’ll need to follow so you can…","fields":{"slug":"/create-tag-manager-account/"},"html":"<p>If you’ve been following my course ‘Hands-On Web Development with React and GatsbyJS’ then this is the post you’ll need to follow so you can set up your Tag Manager (TM) account and update your <code class=\"language-text\">gatsby-config</code> file. For those of you who aren’t following the course, this post will still be beneficial to you if you’ve never set up a Tag Manager account and are looking for some guidance. Just make sure you have already created a Google Analytics account and added the necessary tracking to your codebase.</p>\n<p><br/><br/></p>\n<h3>Account Creation</h3>\n<p>Let’s get into the nit-gritty and start by creating a Tag Manager account. Go to the TM home page. In the center of the screen you’ll a circle above the words <code class=\"language-text\">Click here to create an account</code> and a the button in the upper right that says <code class=\"language-text\">Create Account</code>.</p>\n<p>After you click either of those, you’ll find yourself on the <code class=\"language-text\">admin/accounts/create</code> page and will need to fill in the following fields:</p>\n<p><strong>Account Setup:</strong></p>\n<ul>\n<li>Account name: call this the name you’ll be using for your site or simply add a placeholder for now which you will be able to change later. I’m simply adding ‘Starter Blog’ for the time being.</li>\n<li>Country: this should automatically default to the country you are in but confirm and change if needed.</li>\n<li>Share data anonymously with Google and others: check this box if this is something you are okay with doing, otherwise leave unchecked.</li>\n</ul>\n<p><img src=\"./account-setup.png\" alt=\"Account Setup\"></p>\n<p><strong>Container Setup:</strong></p>\n<ul>\n<li>Container name: Just like when we set up GA, I’m simply adding a placeholder domain until we have a real one in section when we deploy our site. I’ve used the same placeholder I used in GA: <code class=\"language-text\">www.mywebsite.com</code>.</li>\n<li>Target Platform: select the target platform you’ll be using. For the ‘Hands-On Web Development with React and GatsbyJS’ select <code class=\"language-text\">Web</code>.</li>\n</ul>\n<p><img src=\"./container-setup.png\" alt=\"Container SetUp\"></p>\n<p>Click the <code class=\"language-text\">Create</code> button in the bottom left.</p>\n<p>Next you’ll see the Google Terms of Service. Change the language settings at the top of the screen if preferred and, after reading the terms of service, click the checkbox in the bottom left.</p>\n<p>To proceed click <code class=\"language-text\">Yes</code> in the upper right hand corner of the screen.</p>\n<p>Wait for Google to do its thing… save… load… Now you’ll see a modal. Anyone who is doing the Gatsby course with me can close out of this as we don’t need the blocks of code. If you’re coming from outside the course, you will probably need to add this to your codebase somewhere so go ahead and copy it before closing the modal, and add it where necessary.</p>\n<p>Great, that’s account creation complete. Let’s move onto the next step where we’ll need to update our ‘gatsby-config’ file. Anyone who is not doing my course, feel free to jump ahead to the next section.</p>\n<p><strong>Updating Our Config:</strong></p>\n<p>This step will be easy and brief as there are only 2 things we need to do:</p>\n<p>Copy the GTM ID from the bar along the top of your screen from the TM dashboard.</p>\n<p><img src=\"./tm-id.png\" alt=\"Tag Manager ID\"></p>\n<p>Go to your ‘gatsby-config’ file, scroll down to where we added the <code class=\"language-text\">gatsby-plugin-googletagmanager</code> and paste that ID into the <code class=\"language-text\">id</code> field.</p>\n<p><img src=\"./update-config.png\" alt=\"Update Config\"></p>","frontmatter":{"date":"June 11, 2019","title":"Setting Up a Tag Manager Account","description":"Learn how to set up a Google Tag Manager account"}}},{"node":{"excerpt":"This is going to be a pretty brief post but the purpose of it is important. If you’ve gone to the trouble of setting up Google Analytics to…","fields":{"slug":"/filter-ip-google-analytics/"},"html":"<p>This is going to be a pretty brief post but the purpose of it is important. If you’ve gone to the trouble of setting up Google Analytics to monitor your website, then I’m pretty sure you don’t want noise from you visiting your own site or working on localhost to create a whole lot of noise in your Google Analytics data.</p>\n<p>Login to your GA account and click on the gear icon in the bottom left. From here, click <code class=\"language-text\">Filters</code> in the right hand column, then click the red <code class=\"language-text\">Add Filter</code> button.\n<img src=\"./filters.png\" alt=\"Filters\"></p>\n<p>Select an appropriate name for your filter. I’ll call mine <code class=\"language-text\">My Home IP</code> as I will be adding my home IP address to the filter. In each dropdown select the following:</p>\n<ul>\n<li>Select filter type: Exclude</li>\n<li>Select source or destination: traffic from the IP addresses</li>\n<li>Select expression: that are equal to\n<img src=\"./filte-info.png\" alt=\"Filters\"></li>\n</ul>\n<p>Now you’ll need your IP address. To get this, open a new tab and type ‘my ip’ and hit enter. At the top of the results you should see your public IP address. Copy that, head back to GA and paste it into the input field under <code class=\"language-text\">IP address</code>.</p>\n<p>Hit save and your done! It’s that easy. Now you can spend as much time on your site in any environment, while working from the IP address you just added, and you won’t become a part of your own data. Just be sure to add IP addresses to any other locations where you frequently work.</p>","frontmatter":{"date":"June 11, 2019","title":"Filter Your IP in Google Analytics","description":"Add one or multiple IPs to a filter in Google Analytics"}}}]}},"pageContext":{}},"staticQueryHashes":["852313850"]}